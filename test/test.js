const { assert } = require("chai");
const { ethers } = require("hardhat");

describe("Proxies", function () {
  let proxy, implementation;
  before(async () => {
    const Implementation = await ethers.getContractFactory("Implementation");
    implementation = await Implementation.deploy();
    await implementation.deployed();

    const Honest = await ethers.getContractFactory("Honest");
    honest = await Honest.deploy();
    await honest.deployed();

    const Malicious = await ethers.getContractFactory("Malicious");
    malicious = await Malicious.deploy();
    await malicious.deployed();

    const Proxy = await ethers.getContractFactory("Proxy");
    proxy = await Proxy.deploy(implementation.address, honest.address);
    await proxy.deployed();

    await proxy.myProxyMethod();

    await implementation.changeOtherContract(malicious.address);
    await implementation.myImplementationMethod();
  })

  it("should change the variable x to 20", async function () {
    const x = await proxy.x();

    assert.equal(x.toNumber(), 20);
  });

  it("should have blown up the implementation", async () => {
    const bytecode = await ethers.provider.getCode(implementation.address);

    console.log(bytecode);
  });
});
